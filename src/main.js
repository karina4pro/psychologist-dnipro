document.addEventListener("DOMContentLoaded", function () {
    initAnimations();
    initMobileMenu();
    initBackToTop();
    initHeaderScroll();
    initFaq();
    initModals();
    initReviewsCarousel(); // –î–æ–±–∞–≤–ª–µ–Ω –≤—ã–∑–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—É—Å–µ–ª–∏ –æ—Ç–∑—ã–≤–æ–≤
});

// 1Ô∏è‚É£ –ê–Ω–∏–º–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –∏ —Å–µ–∫—Ü–∏–π
// –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ö–û–î
function initAnimations() {
    document.querySelectorAll(".hero-item").forEach((item, index) => {
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª–∏ Tailwind
        item.style.opacity = "0";
        item.style.transform = "translateY(20px)";
        item.style.transition = "opacity 0.5s ease-out, transform 0.5s ease-out";
        
        // –ö—Ä–∞—Å–∏–≤–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        setTimeout(() => {
            item.style.opacity = "1";
            item.style.transform = "translateY(0)";
        }, index * 150);
    });
    
    // üöÄ –ê–Ω–∏–º–∞—Ü–∏—è —Å–µ–∫—Ü–∏–π, –±–ª–æ–∫–æ–≤ –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add("visible");
                
                // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Å–µ—Ö –±–ª–æ–∫–æ–≤ –≤–Ω—É—Ç—Ä–∏ —Å–µ–∫—Ü–∏–∏
                const blocks = entry.target.querySelectorAll(".block");
                blocks.forEach((block, index) => {
                    setTimeout(() => {
                        block.classList.add("visible");
                    }, index * 150); // –£–º–µ–Ω—å—à–∏–ª –∑–∞–¥–µ—Ä–∂–∫—É —Å 200–º—Å –¥–æ 150–º—Å
                });
                
                // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–æ–≤
                entry.target.querySelectorAll(".item").forEach((item, itemIndex) => {
                    setTimeout(() => {
                        item.classList.add("visible");
                    }, itemIndex * 75); // –£–º–µ–Ω—å—à–∏–ª –∑–∞–¥–µ—Ä–∂–∫—É —Å–æ 100–º—Å –¥–æ 75–º—Å
                });
                
                observer.unobserve(entry.target);
            }
        });
    }, { threshold: 0.2, rootMargin: "-50px 0px" });
    
    document.querySelectorAll(".section-block").forEach(section => observer.observe(section));
}

// 2Ô∏è‚É£ –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é (–ø–ª–∞–≤–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ)
function initMobileMenu() {
    const menuToggle = document.getElementById("menu-toggle");
    const mobileMenu = document.getElementById("mobile-menu");
    
    if (!menuToggle || !mobileMenu) return;
    
    menuToggle.addEventListener("click", function () {
        mobileMenu.classList.toggle("open");
        menuToggle.textContent = mobileMenu.classList.contains("open") ? "‚úï" : "‚ò∞";
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–µ–Ω—é
    document.addEventListener("click", function (event) {
        if (!mobileMenu.contains(event.target) && !menuToggle.contains(event.target)) {
            mobileMenu.classList.remove("open");
            menuToggle.textContent = "‚ò∞";
        }
    });
}

// 3Ô∏è‚É£ –ö–Ω–æ–ø–∫–∞ "–ù–∞–≤–µ—Ä—Ö" —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
function initBackToTop() {
    const backToTopButton = document.getElementById("back-to-top");
    const circleFg = document.querySelector(".circle-fg");
    
    if (!backToTopButton || !circleFg) return;
    
    // –í—ã—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–ª–∏–Ω—É –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –¥–ª—è stroke-dasharray
    const radius = 29; // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—é r –≤ SVG
    const circumference = 2 * Math.PI * radius;
    circleFg.style.strokeDasharray = `${circumference}`;
    circleFg.style.strokeDashoffset = `${circumference}`;
    
    window.addEventListener("scroll", function () {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
        if (window.scrollY > 200) {
            backToTopButton.classList.add("visible");
        } else {
            backToTopButton.classList.remove("visible");
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        const scrollTop = window.scrollY;
        const scrollHeight = document.documentElement.scrollHeight - window.innerHeight;
        const scrollPercentage = Math.min(scrollTop / scrollHeight, 1);
        
        const dashoffset = circumference - (scrollPercentage * circumference);
        circleFg.style.strokeDashoffset = dashoffset;
    });
    
    backToTopButton.addEventListener("click", function () {
        window.scrollTo({ top: 0, behavior: 'smooth' });
    });
}

// 4Ô∏è‚É£ –ü–ª–∞–≤–Ω–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —à–∞–ø–∫–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
function initHeaderScroll() {
    const header = document.querySelector('.fixed-header');
    
    if (!header) return;
    
    let prevScrollPos = window.scrollY;
    window.addEventListener('scroll', function () {
        const currentScrollPos = window.scrollY;
        if (prevScrollPos < currentScrollPos && currentScrollPos > 50) {
            header.classList.add("-translate-y-full");
        } else {
            header.classList.remove("-translate-y-full");
        }
        prevScrollPos = currentScrollPos;
    });
}

// 5Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ–∫—Ü–∏–∏ FAQ
function initFaq() {
    const faqButtons = document.querySelectorAll('.faq-question');
    
    faqButtons.forEach(button => {
        button.addEventListener('click', function() {
            // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –æ—Ç–≤–µ—Ç–∞
            const answer = this.nextElementSibling;
            
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é
            if (answer.classList.contains('hidden')) {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
                answer.classList.remove('hidden');
                // –í—Ä–∞—â–∞–µ–º –∏–∫–æ–Ω–∫—É
                this.querySelector('.faq-icon').classList.add('rotate-180');
                // –û–∫—Ä—É–≥–ª—è–µ–º —Ç–æ–ª—å–∫–æ –≤–µ—Ä—Ö–Ω–∏–µ —É–≥–ª—ã –∫–Ω–æ–ø–∫–∏
                this.classList.add('rounded-b-none');
            } else {
                // –°–∫—Ä—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
                answer.classList.add('hidden');
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∫–æ–Ω–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
                this.querySelector('.faq-icon').classList.remove('rotate-180');
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–Ω–æ–µ –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
                this.classList.remove('rounded-b-none');
            }
        });
    });
}



// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
function initModals() {
    // –û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    function setupModal(triggerSelector, modalSelector, closeSelector) {
        const trigger = document.querySelector(triggerSelector);
        const modal = document.querySelector(modalSelector);
        const closeBtn = modal?.querySelector(closeSelector);
        
        if (!trigger || !modal) return;
        
        trigger.addEventListener("click", function(e) {
            e.preventDefault();
            modal.classList.remove("hidden");
            
            // –ï—Å–ª–∏ —ç—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∫–∞—Ä—É—Å–µ–ª—å—é —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—É—Å–µ–ª—å
            if (modalSelector === "#certificatesModal") {
                initCarousel();
            }
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ
        closeBtn?.addEventListener("click", function() {
            modal.classList.add("hidden");
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        modal.addEventListener("click", function(e) {
            if (e.target === this) {
                modal.classList.add("hidden");
            }
        });
    }
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    setupModal("#certificatesBtn", "#certificatesModal", ".close");
    setupModal("#groupTopicsLink", "#groupTopicsModal", ".close-groupTopics");
}

// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏
function initCarousel(carouselSelector = ".carousel", itemSelector = "img") {
    const carousel = document.querySelector(carouselSelector);
    if (!carousel) return;
    
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    carousel.closest(".carousel-container")?.querySelectorAll(".carousel-nav-button").forEach(btn => btn.remove());
    
    // –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Ä—É—Å–µ–ª–∏
    carousel.style.scrollBehavior = "smooth";
    carousel.style.scrollSnapType = "x mandatory";
    carousel.style.cursor = "grab";
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫ –±–ª–∏–∂–∞–π—à–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
    function snapToNearestItem() {
        const items = carousel.querySelectorAll(itemSelector);
        if (items.length === 0) return;
        
        const item = items[0];
        const itemWidth = item.offsetWidth + parseInt(getComputedStyle(item).marginRight || "0");
        const scrollPosition = carousel.scrollLeft;
        const itemIndex = Math.round(scrollPosition / itemWidth);
        
        carousel.scrollTo({
            left: itemIndex * itemWidth,
            behavior: 'smooth'
        });
    }
    
    // –°–æ–±—ã—Ç–∏—è –¥–ª—è desktop
    let isDragging = false;
    let startX, scrollLeft;
    
    carousel.addEventListener("mousedown", (e) => {
        isDragging = true;
        startX = e.pageX - carousel.offsetLeft;
        scrollLeft = carousel.scrollLeft;
        carousel.style.cursor = "grabbing";
        e.preventDefault();
    });
    
    carousel.addEventListener("mouseleave", () => {
        isDragging = false;
        carousel.style.cursor = "grab";
    });
    
    carousel.addEventListener("mouseup", () => {
        isDragging = false;
        carousel.style.cursor = "grab";
        snapToNearestItem();
    });
    
    carousel.addEventListener("mousemove", (e) => {
        if (!isDragging) return;
        e.preventDefault();
        const x = e.pageX - carousel.offsetLeft;
        const walk = (x - startX) * 1.5;
        carousel.scrollLeft = scrollLeft - walk;
    });
    
    // –°–æ–±—ã—Ç–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
let touchStartX, touchStartY;
    
carousel.addEventListener("touchstart", (e) => {
    touchStartX = e.touches[0].clientX;
    touchStartY = e.touches[0].clientY; // –î–û–ë–ê–í–ò–¢–¨ –≠–¢–£ –°–¢–†–û–ö–£
    scrollLeft = carousel.scrollLeft;
});
    
carousel.addEventListener("touchmove", (e) => {
    if (!touchStartX) return;
    const touchX = e.touches[0].clientX;
    const touchY = e.touches[0].clientY;
    const deltaX = Math.abs(touchX - touchStartX);
    const deltaY = Math.abs(touchY - touchStartY);
    
    // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —á–µ—Ç–∫–∏–π –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–≤–∞–π–ø
    if (deltaX > deltaY && deltaX > 15) {
        const walk = (touchX - touchStartX) * 1.5;
        carousel.scrollLeft = scrollLeft - walk;
        e.preventDefault();
    }
    // –ò–Ω–∞—á–µ —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã
});
    
    carousel.addEventListener("touchend", () => {
        touchStartX = null;
        snapToNearestItem();
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const carouselContainer = carousel.closest(".carousel-container");
    
    // –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–∏–π"
    const prevButton = document.createElement("button");
    prevButton.innerHTML = "&#10094;";
    prevButton.className = "carousel-nav-button bg-primary text-white rounded-full w-10 h-10 flex items-center justify-center absolute left-2 top-1/2 transform -translate-y-1/2 z-10 focus:outline-none";
    prevButton.addEventListener("click", () => {
        const items = carousel.querySelectorAll(itemSelector);
        if (items.length === 0) return;
        
        const item = items[0];
        const itemWidth = item.offsetWidth + parseInt(getComputedStyle(item).marginRight || "0");
        carousel.scrollBy({
            left: -itemWidth,
            behavior: "smooth"
        });
    });
    
    // –ö–Ω–æ–ø–∫–∞ "–°–ª–µ–¥—É—é—â–∏–π"
    const nextButton = document.createElement("button");
    nextButton.innerHTML = "&#10095;";
    nextButton.className = "carousel-nav-button bg-primary text-white rounded-full w-10 h-10 flex items-center justify-center absolute right-2 top-1/2 transform -translate-y-1/2 z-10 focus:outline-none";
    nextButton.addEventListener("click", () => {
        const items = carousel.querySelectorAll(itemSelector);
        if (items.length === 0) return;
        
        const item = items[0];
        const itemWidth = item.offsetWidth + parseInt(getComputedStyle(item).marginRight || "0");
        carousel.scrollBy({
            left: itemWidth,
            behavior: "smooth"
        });
    });
    
    carouselContainer.appendChild(prevButton);
    carouselContainer.appendChild(nextButton);
    
    // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
    setTimeout(snapToNearestItem, 100);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—É—Å–µ–ª–∏ –æ—Ç–∑—ã–≤–æ–≤ - –≤—ã–∑–æ–≤ –æ–±–æ–±—â–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
function initReviewsCarousel() {
    initCarousel(".reviews-carousel", ".review-item");
}

// –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–∞—Ä—É—Å–µ–ª–∏
function initCarouselOriginal() {
    initCarousel(".carousel", "img");
}